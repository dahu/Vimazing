*vimazing.txt*  An hjkl trainer so cool, the Pentagon uses it!

(actual Pentagon usage may not exist)
                                                *vimazing-authors*
Authors:  Barry Arthur <barry.arthur at gmail dot com>
          Israel Chauca <israelchauca at gmail dot com>

License: Same terms as Vim itself (see |license|)

INTRODUCTION                                    *vimazing*

Vimazing is both very Vim and totally Amazing. It's, Vimazing!
Other hjkl trainers may have you doing boring, real-world things to practise
the essential movement keys in Vim, but not Vimazing. Our patented system will have you 

FEATURES                                        *vimazing-features*

ENTER ~

Pressing <Enter> (by default, but can be customised. See
|vimazing-configuration|) in normal mode will insert a newline in
the current line at the cursor position. If the cursor is at the end
of the line, this will push the character there to the next line. If
you wanted to open a new line below this one instead, use the
|vimazing-opennewline| feature instead.

Multiple newlines can be inserted by preceding the <Enter> with a
count.

OPEN NEWLINE ~

Pressing <S-Enter> (by default, but can be customised. See
|vimazing-configuration|) in normal mode will insert a newline
below the current line without affecting the line the cursor is
currently on.

Multiple newlines can be appended by preceding the <S-Enter> with a
count.

BACKSPACE ~

Backspace will delete the character to the left of the cursor,
deleting over the beginning of line when pressed in column 1.

If you're in column one of an empty line and you press Backspace, it
will not leave a trailing space before the cursor, as in:
(where * is the cursor position)
>
  foo
  *

  foo*
<

But if you're on a line with text, a space will separate the newly
joined lines:
>
  foo
  *x

  foo x*
<

CONFIGURATION                                   *vimazing-configuration*

Some terminals (like gnome-terminal) can't distinguish between
<Enter>, <S-Enter> and <C-Enter>. If you're afflicted by such a
situation, you can customise the actual key used to perform the
various vimazing functions. For example, to map the
|vimazing-opennewline| feature (which is, by default, mapped to
<S-Enter>) to <Space>, put the following in your ~/.vimrc :
>
  nmap <Space> <Plug>OpenNewline
<

The following map targets are available for remapping in your ~/.vimrc :
>
  <Plug>BSPastBOL
  <Plug>InsertNewline
  <Plug>OpenNewline
<

ISSUES                                          *vimazing-issues*

Vim veterans could potentially get confused when using your
installation of Vim. Please report any repeatable instances of this.

Should we have a vnoremap to just delete visually selected text when
the user presses Backspace?

 vim:tw=78:ts=8:ft=help:norl:
